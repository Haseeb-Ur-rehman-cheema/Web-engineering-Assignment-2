@page "/faculty"
@using Assignment_2.Data
@inject SchoolDbContext DbContext

<h3>Edit Faculty</h3>

<!-- Add a table to display the list of faculty members -->
<table class="table">
    <thead>
        <tr>
            <th>Faculty Name</th>
            <th>Department ID</th>
            <th>Standing</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var faculty in faculties)
        {
            <tr>
                <td>@faculty.fname</td>
                <td>@faculty.deptid</td>
                <td>@faculty.standing</td>
                <td>
                    <!-- Add a delete button for each faculty member -->
                    <button class="btn btn-danger" @onclick="() => DeleteFaculty(faculty.fid)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Add a form to edit or add a new faculty member -->
<h3>Edit/Add Faculty</h3>
<EditForm Model="@Faculty" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="fname">Faculty Name</label>
        <InputText id="fname" @bind-Value="Faculty.fname" class="form-control" />
        <ValidationMessage For="@(() => Faculty.fname)" />
    </div>

    <div class="form-group">
        <label for="deptid">Department ID</label>
        <InputText id="deptid" @bind-Value="Faculty.deptid" class="form-control" />
        <ValidationMessage For="@(() => Faculty.deptid)" />
    </div>

    <div class="form-group">
        <label for="standing">Standing</label>
        <InputNumber id="standing" @bind-Value="Faculty.standing" class="form-control" />
        <ValidationMessage For="@(() => Faculty.standing)" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private Faculty Faculty { get; set; } = new Faculty();
    private List<Faculty> faculties;

    protected override void OnInitialized()
    {
        
        faculties = DbContext.Faculties.ToList();
    }
     private void HandleValidSubmit()
    {
        
        if (Faculty.fid == 0)
        {
            
            DbContext.Faculties.Add(Faculty);
        }
        else
        {
            DbContext.Faculties.Update(Faculty);
        }

        DbContext.SaveChanges();

        Faculty = new Faculty();

        faculties = DbContext.Faculties.ToList();

        Console.WriteLine("Faculty data submitted successfully!");
    }

    private void DeleteFaculty(int facultyId)
    {
        var facultyToDelete = DbContext.Faculties.Find(facultyId);
        if (facultyToDelete != null)
        {
            DbContext.Faculties.Remove(facultyToDelete);
            DbContext.SaveChanges();
        }
        faculties = DbContext.Faculties.ToList();

        Console.WriteLine("Faculty member deleted successfully!");
    }
}
