@page "/student"
@using Assignment_2.Data
@inject SchoolDbContext dbContext
@inject NavigationManager nav
<h3>Edit Student</h3>


<table class="table">
    <thead>
        <tr>
            <th>Student Name</th>
            <th>Major</th>
            <th>Standing</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in students)
        {
            <tr>
                <td>@student.sname</td>
                <td>@student.major</td>
                <td>@student.standing</td>
                <td>
                    
                    <button class="btn btn-danger" @onclick="() => DeleteStudent(student.sid)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>


<h3>Edit/Add Student</h3>
<EditForm Model="@Student" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="sname">Student Name</label>
        <InputText id="sname" @bind-Value="Student.sname" class="form-control" />
        <ValidationMessage For="@(() => Student.sname)" />
    </div>

    <div class="form-group">
        <label for="major">Major</label>
        <InputText id="major" @bind-Value="Student.major" class="form-control" />
        <ValidationMessage For="@(() => Student.major)" />
    </div>

    <div class="form-group">
        <label for="standing">Standing</label>
        <InputNumber id="standing" @bind-Value="Student.standing" class="form-control" />
        <ValidationMessage For="@(() => Student.standing)" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <button onclick="Query1a">Count students</button>
</EditForm>

@code {
    private Student Student { get; set; } = new Student();
    List<Student> students;

    private void HandleValidSubmit()
    {
        if (Student.sid == 0)
        {
            dbContext.Students.Add(Student);
        }
        else
        {
            dbContext.Students.Update(Student);
        }
        dbContext.SaveChanges();
        students = dbContext.Students.ToList();
        Console.WriteLine("Student data submitted successfully!");
    }
    
    private void DeleteStudent(int studentId)
    {
        
        var studentToDelete = dbContext.Students.Find(studentId);
        if (studentToDelete != null)
        {
            dbContext.Students.Remove(studentToDelete);
            dbContext.SaveChanges();
        }
        students = dbContext.Students.ToList();
        Console.WriteLine("Student deleted successfully!");
    }
}
